package tech.amereta.generator.service.spring.generator.module.security;

import tech.amereta.core.java.declaration.AbstractJavaFieldDeclaration;
import tech.amereta.core.java.declaration.JavaFieldDeclaration;
import tech.amereta.core.java.util.JavaAnnotation;
import tech.amereta.core.java.util.JavaModifier;
import tech.amereta.generator.description.spring.SpringBootApplicationDescription;
import tech.amereta.generator.description.spring.db.type.SpringDBModuleType;
import tech.amereta.generator.service.spring.AbstractSpringSourceCodeGenerator;

import java.lang.reflect.Modifier;
import java.util.ArrayList;
import java.util.List;

public final class AuthenticableDomainFieldsGenerator extends AbstractSpringSourceCodeGenerator {

    public static List<AbstractJavaFieldDeclaration> generate(final SpringBootApplicationDescription applicationDescription) {
        return List.of(
                JavaFieldDeclaration.builder()
                        .modifiers(
                                JavaModifier.builder()
                                        .type(JavaModifier.TYPE_MODIFIERS)
                                        .modifiers(Modifier.PRIVATE)
                        )
                        .dataType("String")
                        .name("username")
                        .annotations(
                                List.of(
                                        JavaAnnotation.builder()
                                                .name("jakarta.validation.constraints.NotNull"),
                                        JavaAnnotation.builder()
                                                .name("jakarta.validation.constraints.Pattern")
                                                .attributes(
                                                        List.of(
                                                                JavaAnnotation.Attribute.builder()
                                                                        .name("regexp")
                                                                        .dataType(Enum.class)
                                                                        .values(List.of("tech.amereta.starter.Constants.USERNAME_REGEX"))
                                                        )
                                                ),
                                        JavaAnnotation.builder()
                                                .name("jakarta.validation.constraints.Size")
                                                .attributes(
                                                        List.of(
                                                                JavaAnnotation.Attribute.builder()
                                                                        .name("min")
                                                                        .dataType(Integer.class)
                                                                        .values(List.of("1")),
                                                                JavaAnnotation.Attribute.builder()
                                                                        .name("max")
                                                                        .dataType(Integer.class)
                                                                        .values(List.of("50"))
                                                        )
                                                ),
                                        JavaAnnotation.builder()
                                                .name("jakarta.persistence.Column")
                                                .attributes(
                                                        List.of(
                                                                JavaAnnotation.Attribute.builder()
                                                                        .name("length")
                                                                        .dataType(Integer.class)
                                                                        .values(List.of("50")),
                                                                JavaAnnotation.Attribute.builder()
                                                                        .name("unique")
                                                                        .dataType(Boolean.class)
                                                                        .values(List.of("true")),
                                                                JavaAnnotation.Attribute.builder()
                                                                        .name("nullable")
                                                                        .dataType(Boolean.class)
                                                                        .values(List.of("false"))
                                                        )
                                                )
                                )
                        ),
                JavaFieldDeclaration.builder()
                        .modifiers(
                                JavaModifier.builder()
                                        .type(JavaModifier.TYPE_MODIFIERS)
                                        .modifiers(Modifier.PRIVATE)
                        )
                        .dataType("String")
                        .name("email")
                        .annotations(
                                List.of(
                                        JavaAnnotation.builder()
                                                .name("jakarta.validation.constraints.Email"),
                                        JavaAnnotation.builder()
                                                .name("jakarta.validation.constraints.Size")
                                                .attributes(
                                                        List.of(
                                                                JavaAnnotation.Attribute.builder()
                                                                        .name("min")
                                                                        .dataType(Integer.class)
                                                                        .values(List.of("5")),
                                                                JavaAnnotation.Attribute.builder()
                                                                        .name("max")
                                                                        .dataType(Integer.class)
                                                                        .values(List.of("254"))
                                                        )
                                                ),
                                        JavaAnnotation.builder()
                                                .name("jakarta.persistence.Column")
                                                .attributes(
                                                        List.of(
                                                                JavaAnnotation.Attribute.builder()
                                                                        .name("length")
                                                                        .dataType(Integer.class)
                                                                        .values(List.of("254")),
                                                                JavaAnnotation.Attribute.builder()
                                                                        .name("unique")
                                                                        .dataType(Boolean.class)
                                                                        .values(List.of("true"))
                                                        )
                                                )
                                )
                        ),
                JavaFieldDeclaration.builder()
                        .modifiers(
                                JavaModifier.builder()
                                        .type(JavaModifier.TYPE_MODIFIERS)
                                        .modifiers(Modifier.PRIVATE)
                        )
                        .dataType("String")
                        .name("password")
                        .annotations(
                                List.of(
                                        JavaAnnotation.builder()
                                                .name("com.fasterxml.jackson.annotation.JsonIgnore"),
                                        JavaAnnotation.builder()
                                                .name("jakarta.validation.constraints.NotNull"),
                                        JavaAnnotation.builder()
                                                .name("jakarta.validation.constraints.Size")
                                                .attributes(
                                                        List.of(
                                                                JavaAnnotation.Attribute.builder()
                                                                        .name("min")
                                                                        .dataType(Integer.class)
                                                                        .values(List.of("60")),
                                                                JavaAnnotation.Attribute.builder()
                                                                        .name("max")
                                                                        .dataType(Integer.class)
                                                                        .values(List.of("60"))
                                                        )
                                                ),
                                        JavaAnnotation.builder()
                                                .name("jakarta.persistence.Column")
                                                .attributes(
                                                        List.of(
                                                                JavaAnnotation.Attribute.builder()
                                                                        .name("name")
                                                                        .dataType(String.class)
                                                                        .values(List.of("password_hash")),
                                                                JavaAnnotation.Attribute.builder()
                                                                        .name("length")
                                                                        .dataType(Integer.class)
                                                                        .values(List.of("60")),
                                                                JavaAnnotation.Attribute.builder()
                                                                        .name("nullable")
                                                                        .dataType(Boolean.class)
                                                                        .values(List.of("false"))
                                                        )
                                                )
                                )
                        ),
                JavaFieldDeclaration.builder()
                        .modifiers(
                                JavaModifier.builder()
                                        .type(JavaModifier.TYPE_MODIFIERS)
                                        .modifiers(Modifier.PRIVATE)
                        )
                        .dataType("tech.amereta.starter.model.enumeration.Language")
                        .name("language")
                        .annotations(
                                List.of(
                                        JavaAnnotation.builder()
                                                .name("jakarta.validation.constraints.NotNull"),
                                        JavaAnnotation.builder()
                                                .name("jakarta.persistence.Enumerated")
                                                .attributes(
                                                        List.of(
                                                                JavaAnnotation.Attribute.builder()
                                                                        .dataType(Enum.class)
                                                                        .values(List.of("jakarta.persistence.EnumType.STRING"))
                                                        )
                                                ),
                                        JavaAnnotation.builder()
                                                .name("jakarta.persistence.Column")
                                                .attributes(
                                                        List.of(
                                                                JavaAnnotation.Attribute.builder()
                                                                        .name("nullable")
                                                                        .dataType(Boolean.class)
                                                                        .values(List.of("false"))
                                                        )
                                                )
                                )
                        ),
                JavaFieldDeclaration.builder()
                        .modifiers(
                                JavaModifier.builder()
                                        .type(JavaModifier.TYPE_MODIFIERS)
                                        .modifiers(Modifier.PRIVATE)
                        )
                        .dataType("boolean")
                        .name("activated")
                        .value(false)
                        .annotations(
                                List.of(
                                        JavaAnnotation.builder()
                                                .name("jakarta.validation.constraints.NotNull"),
                                        JavaAnnotation.builder()
                                                .name("jakarta.persistence.Column")
                                                .attributes(
                                                        List.of(
                                                                JavaAnnotation.Attribute.builder()
                                                                        .name("nullable")
                                                                        .dataType(Boolean.class)
                                                                        .values(List.of("false"))
                                                        )
                                                )
                                )
                        ),
                JavaFieldDeclaration.builder()
                        .modifiers(
                                JavaModifier.builder()
                                        .type(JavaModifier.TYPE_MODIFIERS)
                                        .modifiers(Modifier.PRIVATE)
                        )
                        .dataType("java.util.UUID")
                        .name("activationKey")
                        .annotations(
                                activationKeyAnnotatins(applicationDescription)
                        ),
                JavaFieldDeclaration.builder()
                        .modifiers(
                                JavaModifier.builder()
                                        .type(JavaModifier.TYPE_MODIFIERS)
                                        .modifiers(Modifier.PRIVATE)
                        )
                        .dataType("java.util.Set")
                        .genericTypes(List.of(basePackage(applicationDescription) + ".model.enumeration.Role"))
                        .name("roles")
                        .annotations(
                                List.of(
                                        JavaAnnotation.builder()
                                                .name("jakarta.persistence.Column")
                                                .attributes(
                                                        List.of(
                                                                JavaAnnotation.Attribute.builder()
                                                                        .name("columnDefinition")
                                                                        .dataType(String.class)
                                                                        .values(List.of("json"))
                                                        )
                                                ),
                                        JavaAnnotation.builder()
                                                .name("org.hibernate.annotations.JdbcTypeCode")
                                                .attributes(
                                                        List.of(
                                                                JavaAnnotation.Attribute.builder()
                                                                        .dataType(Enum.class)
                                                                        .values(List.of("org.hibernate.type.SqlTypes.JSON"))
                                                        )
                                                )
                                )
                        )
        );
    }

    private static List<JavaAnnotation> activationKeyAnnotatins(SpringBootApplicationDescription applicationDescription) {
        final List<JavaAnnotation> annotations = new ArrayList<>(
                List.of(
                        JavaAnnotation.builder()
                                .name("com.fasterxml.jackson.annotation.JsonIgnore"),
                        JavaAnnotation.builder()
                                .name("jakarta.validation.constraints.Size")
                                .attributes(
                                        List.of(
                                                JavaAnnotation.Attribute.builder()
                                                        .name("min")
                                                        .dataType(Integer.class)
                                                        .values(List.of("36")),
                                                JavaAnnotation.Attribute.builder()
                                                        .name("max")
                                                        .dataType(Integer.class)
                                                        .values(List.of("36"))
                                        )
                                ),
                        JavaAnnotation.builder()
                                .name("jakarta.persistence.Column")
                                .attributes(
                                        List.of(
                                                JavaAnnotation.Attribute.builder()
                                                        .name("name")
                                                        .dataType(String.class)
                                                        .values(List.of("activation_key")),
                                                JavaAnnotation.Attribute.builder()
                                                        .name("length")
                                                        .dataType(Integer.class)
                                                        .values(List.of("36"))
                                        )
                                )
                )
        );
        if(getDataBase(applicationDescription).orElseThrow().getDb().getType() == SpringDBModuleType.MYSQL) {
            annotations.add(
                    JavaAnnotation.builder()
                            .name("org.hibernate.annotations.JdbcTypeCode")
                            .attributes(
                                    List.of(
                                            JavaAnnotation.Attribute.builder()
                                                    .dataType(Enum.class)
                                                    .values(List.of("org.hibernate.type.SqlTypes.VARCHAR"))
                                    )
                            )
            );
        }
        return annotations;
    }
}
